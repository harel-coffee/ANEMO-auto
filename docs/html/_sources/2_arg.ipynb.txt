{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# arg"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _before using the function:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## before using the function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "for use this function, you will need :"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "- to use :mod:`~ANEMO.ANEMO.ANEMO`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ANEMO import ANEMO\n",
    "\n",
    "param_exp = {'N_trials' : 2, 'N_blocks' : 2,\n",
    "             'dir_target' : [[-1, 1], [1, -1]],\n",
    "             'px_per_deg' : 36.51}\n",
    "\n",
    "A = ANEMO(param_exp)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "- to use :func:`~ANEMO.read_edf`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from ANEMO import read_edf\n",
    "\n",
    "datafile = 'name_data_file.asc'\n",
    "data = read_edf(datafile, start='TRIALID')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<hr style=\"height: 0px; width: 100%; border: 1px solid #B1B4B6; margin-left:0\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## arg"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. autofunction :: ANEMO.ANEMO.ANEMO.arg"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Exemple:**"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "see :ref:`here <before using the function>` before using the function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'StimulusOf': 883690,\n",
       " 'StimulusOn': 882944,\n",
       " 'TargetOff': 884762,\n",
       " 'TargetOn': 883990,\n",
       " 'data_x': array([656.7, 656.5, 656.6, ..., 207.4, 207.3, 207.4]),\n",
       " 'data_y': array([502.1, 502.4, 502.8, ..., 518. , 518.2, 518.3]),\n",
       " 'dir_target': -1,\n",
       " 'px_per_deg': 36.51,\n",
       " 'saccades': [[883196, 883213, 18, 654.4, 501.5, 643.4, 507.0],\n",
       "  [884214, 884252, 39, 642.3, 507.0, 542.2, 506.1],\n",
       "  [884595, 884617, 23, 355.0, 516.0, 291.0, 519.6]],\n",
       " 't_0': 882900,\n",
       " 'trackertime': array([882900, 882901, 882902, ..., 884868, 884869, 884870])}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# number of the block and trial that you want to display\n",
    "block, trial  = 1, 1\n",
    "\n",
    "# number of the trial\n",
    "trial_data = trial + param_exp['N_trials']*block\n",
    "\n",
    "arg = A.arg(data_trial=data[trial_data], trial=trial, block=block)\n",
    "arg"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Format de la Cellule Texte Brut",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
